command /pay <player> <integer>:
  trigger:
    if arg-2 < {eTokens::%player's uuid%}:
      arg-2 > 0
      remove arg-2 from {eTokens::%player's uuid%}
      add arg-2 to {eTokens::%arg-1's uuid%}
      send "&aYou paid %arg-1% %arg-2% eTokens!"
      send "&aYou received %arg-2% eTokens from %player%" to arg-1
      log "%player% paid %arg-1% %arg-2% eTokens" to "tokens/transactions.log"
    else:
      send "&cYou dont have enough eTokens!"

on load:
	set {globaltoken} to sunflower of mending named "&bToken" with lore "&5Used to buy items at the shop" with enchants flag hidden
	set {comptoken} to gold block of mending named "&b&lCompressed Token" with lore "&5Currency" with enchants flag hidden

on join:
	log "[+] %player% logged on with %{eTokens::%player's uuid%}% eTokens" to "tokens/connections.log"

on disconnect:
	log "[-] %player% logged off with %{eTokens::%player's uuid%}% eTokens" to "tokens/connections.log"

command /etokencirculation:
	permission: op
	trigger:
		loop {eTokens::*}:
			add loop-value to {_total}
		send "&aThere are &e%{_total}% &aeTokens in circulation."

command /bank [<text>] [<text>] [<number>]:
	usage: /bank [<exchange/balance>] [<tokens/etokens>] [<amount>]
	trigger:
		if arg-1 is "exchange":
			if arg-3 is set:
				if arg-2 is "tokens":
					if player has arg-3 of {globaltoken}:
						remove arg-3 of {globaltoken} from player's inventory
						add arg-3 to {eTokens::%player's uuid%}
						log "%player% added %arg-3% eTokens to their balance (%{eTokens::%player's uuid%}%)" to "tokens/transactions.log"
						send "&aSuccesfully exchanged &e%arg-3%&a tokens to eTokens. Current balance: &e%{eTokens::%player's uuid%}%&a."
					else:
						send "&cYou don't have %arg-3% tokens on you!"
				else if arg-2 is "etokens":
					if {eTokens::%player's uuid%} >= arg-3:
						if player's inventory has space for arg-3 of {globaltoken}:
							set {eTokens::%player's uuid%} to {eTokens::%player's uuid%} - arg-3
							give player arg-3 of {globaltoken}
							log "%player% removed %arg-3% eTokens from their balance (%{eTokens::%player's uuid%}%)" to "tokens/transactions.log"
							send "&aSuccesfully exchanged &e%arg-3%&a eTokens to tokens. Current balance: &e%{eTokens::%player's uuid%}%&a."
						else:
							send "&cYou don't have enough space for this amount of tokens!"
					else:
						send "&cYou don't have %arg-3% eTokens! Current balance: %{eTokens::%player's uuid%}%."
				else if arg-2 is "depall":
					set {_first} to amount of {globaltoken} in player's inventory
					remove {_first} of {globaltoken} from player's inventory
					set {_second} to amount of {comptoken} in player's inventory
					remove {_second} of {comptoken} from player's inventory
					set {_final} to {_first} + {_second} * 64
					add {_final} to {eTokens::%player's uuid%}
					log "%player% added %{_final}% eTokens to their balance (%{eTokens::%player's uuid%}%)" to "tokens/transactions.log"
					send "&aSuccesfully exchanged &e%{_final}%&a tokens to eTokens. Current balance: &e%{eTokens::%player's uuid%}%&a."
				else:
					send "&cUsage: /bank exchange <tokens/etokens> <amount>"
			else:
				send "&cUsage: /bank exchange <tokens/etokens> <amount>"
		else if arg-1 is "balance":
			send "&aYou have currently &e%{eTokens::%player's uuid%}%&a eTokens in your bank."
		else:
			set {_gui} to a new chest inventory with 3 rows with name "&6&lBank"
			set slots (integers between 0 and 26) of {_gui} to black glass pane named " " 
			set slot 2 of {_gui} to sunflower of mending named "&aDeposit 1 token" with enchants flag hidden
			set slot 4 of {_gui} to sunflower of mending named "&aDeposit all" with enchants flag hidden
			set slot 6 of {_gui} to sunflower of mending named "&aDeposit 64 tokens" with enchants flag hidden
			set slot 13 of {_gui} to chest named "&aCurrent balance: &e%{eTokens::%player's uuid%}%"
			set slot 20 of {_gui} to golden nugget of mending named "&aWithdraw 1 token" with enchants flag hidden
			set slot 22 of {_gui} to golden nugget of mending named "&aWithdraw all" with enchants flag hidden
			set slot 24 of {_gui} to golden nugget of mending named "&aWithdraw 64 tokens" with enchants flag hidden
			open {_gui} to player
command /showetokens <offlineplayer>:
  permission: op
  trigger:
    send "%arg-1% has %{eTokens::%arg-1's uuid%}% etokens"
	
command /setetokens <offlineplayer> <integer>:
  permission: op
  trigger:
    set {eTokens::%arg-1's uuid%} to arg-2
    send "&aSuccesfully set %arg-1%'s eTokens to %arg-2%"
    
on inventory click:
	if name of event-inventory is "&6&lBank":
		cancel event
		name of event-item contains "&aWithdraw" or "&aDeposit"
		if index of event-slot = 4:
			close player's inventory
			execute player command "/bank exchange depall 0"
		else if index of event-slot = 22:
			execute player command "/bank exchange etokens %{eTokens::%player's uuid%}%"
		else if index of event-slot < 10:
			set {_am::*} to uncolored name of event-slot split at " "
			execute player command "/bank exchange tokens %{_am::2} parsed as number%"
		else:
			set {_am::*} to uncolored name of event-slot split at " "
			execute player command "/bank exchange etokens %{_am::2} parsed as number%"
command /compress:
	permission: rank.compress
	permission message: &cBuy a rank with /shop
	trigger:
		set {_n} to number of {globaltoken} in player's inventory
		set {_n} to {_n} / 64
		set {_n} to floor({_n})
		remove ({_n} * 64) of {globaltoken} from player's inventory
		give {_n} of {comptoken} to the player 
		send "&aCompressed %({_n} * 64)% tokens!" to player

command /giveawaywon <player>:
	permission: giveaway.award
	trigger:
		set {eTokens::%arg-1's uuid%} to {eTokens::%arg-1's uuid%} + 500