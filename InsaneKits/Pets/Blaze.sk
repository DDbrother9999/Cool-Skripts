function BlazePet(p: text):
	set {_p} to {_p} parsed as player
	stop if checkPetCD({_p}'s tool, {_p}) is false
	set {_level} to int tag "Pet;level" of nbt compound of {_p}'s tool
	set {_maxBlazes} to {_level}
	set {_currentBlazes} to metadata "Pet%int tag "Pet;id" of nbt compound of {_p}'s tool%;spawned" of {_p} ? 0
	set {Pets::Blaze::%{_p}'s uuid%::lastUsed} to unix timestamp of now
	loop {_maxBlazes} - {_currentBlazes} times:
		summonBlaze({_p}, ({_p}'s tool))
		add 1 to {_currentBlazes}

function summonBlaze(p: player, t: item):
	set metadata "Pet%int tag "Pet;id" of nbt compound of {_t}%;spawned" of {_p} to metadata "Pet%int tag "Pet;id" of nbt compound of {_t}%;spawned" of {_p} + 1
	summon blaze at {_p}'s location
	set {_l} to last spawned blaze
	set display name of {_l} to "&c&l%{_p}%'s Blaze"
	set metadata "Blaze;Owner" of {_l} to {_p}
	wait 4 minutes
	set metadata "Pet%int tag "Pet;id" of nbt compound of {_t}%;spawned" of {_p} to metadata "Pet%int tag "Pet;id" of nbt compound of {_t}%;spawned" of {_p} - 1
	kill {_l}

on target:
	event-entity is blaze
	target's name is metadata "Blaze;Owner" of event-entity
	cancel event

on damage:
	attacker's name is metadata "Blaze;Owner" of victim
	cancel event

on death of blaze:
	clear drops